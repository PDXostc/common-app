# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.
#   make noHW  - Make the most UTs, no hardware required.
#   make olOnly  - Make the most UTs, only Optolyzer HW required.
#   make fullHW  - Make the most UTs, Optolyzer and MOST HW required.
#   make api  	- Make thegh level MOST api UTs.
#   make ot		- Make the non-UT ot stand alone test app.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ../../../tools/gtest-1.7.0

# Where to find user code.
# ORG: USER_DIR = ../samples
USER_DIR = ../src

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Most specific flags:
CPPFLAGS += -std=c++11 -I../src -I../../common/src -I../../include 

# Flags passed to the C++ compiler.
# ORG: CXXFLAGS += -g -Wall -Wextra -pthread
CXXFLAGS += -g -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = noHW olOnly fullHW ot api

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

# JE:
LIBSRC = AudioMost Optolyzer
libs : $(LIBSRC).o

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.


# $(LIBSRC).o: $(USER_DIR)/$(LIBSRC).cpp $(USER_DIR)/$(LIBSRC).h $(GTEST_HEADERS)
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/$(LIBSRC).cpp

#AudioMost.o : $(USER_DIR)/AudioMost.cpp $(USER_DIR)/AudioMost.h $(GTEST_HEADERS)
AudioMost.o : $(USER_DIR)/AudioMost.cpp $(USER_DIR)/AudioMost.h 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/AudioMost.cpp

# Optolyzer.o : $(USER_DIR)/Optolyzer.cpp $(USER_DIR)/Optolyzer.h $(GTEST_HEADERS)
Optolyzer.o : $(USER_DIR)/Optolyzer.cpp $(USER_DIR)/Optolyzer.h 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/Optolyzer.cpp

ControlDesc.o : $(USER_DIR)/ControlDesc.h $(USER_DIR)/ControlDesc.cpp 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/ControlDesc.cpp

# ot.o : $(USER_DIR)/../ut/ot.cpp $(GTEST_HEADERS)
ot.o : $(USER_DIR)/../ut/ot.cpp $(USER_DIR)/Optolyzer.h $(USER_DIR)/AudioMost.h $(USER_DIR)/ControlDesc.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/../ut/ot.cpp

ot: Optolyzer.o AudioMost.o ControlDesc.o ot.o 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

noHW.o : noHW.cpp \
                     $(USER_DIR)/Optolyzer.h utOL.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c noHW.cpp

noHW : noHW.o Optolyzer.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

olOnly.o : olOnly.cpp \
                     $(USER_DIR)/Optolyzer.h utOL.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c olOnly.cpp

olOnly : olOnly.o Optolyzer.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

fullHW.o : fullHW.cpp \
                     $(USER_DIR)/AudioMost.h $(USER_DIR)/Optolyzer.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c fullHW.cpp

fullHW : fullHW.o AudioMost.o Optolyzer.o ControlDesc.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

api.o : api.cpp \
                     $(USER_DIR)/AudioMost.h $(USER_DIR)/Optolyzer.h $(USER_DIR)/ControlDesc.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c api.cpp

api : api.o AudioMost.o Optolyzer.o ControlDesc.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

